name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn -B clean verify --file backend/pom.xml
      - name: Upload backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/backend-0.0.1-SNAPSHOT.jar

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: cd frontend && npm install
      - name: Build frontend
        run: cd frontend && npm run build

  dockerize:
    needs: [build-backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download backend JAR
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: backend/target
      - name: Build Docker image
        run: docker build -t gpt-wrapper-backend ./backend

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [dockerize, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Terraform Init
        run: terraform -chdir=backend/terraform init
      - name: Terraform Apply
        run: terraform -chdir=backend/terraform apply -auto-approve
      - name: Docker Push (placeholder)
        run: echo "Push Docker image to ECR here"
      - name: Upload Frontend to S3 (placeholder)
        run: echo "Upload frontend build to S3 here"
